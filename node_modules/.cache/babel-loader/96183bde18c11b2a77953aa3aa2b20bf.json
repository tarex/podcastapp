{"ast":null,"code":"import _slicedToArray from \"/Volumes/Gangster/codes/upwork/posdcastapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Volumes/Gangster/codes/upwork/posdcastapp/src/AudioProvider.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var AudioContext = /*#__PURE__*/React.createContext({\n  time: 0,\n  seekTime: 0,\n  updateSeekTime: function updateSeekTime(duration) {},\n  updateTime: function updateTime(duration) {}\n});\nexport var AudioProvider = function AudioProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      seekTime = _useState4[0],\n      setSeekTime = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: {\n      time: time,\n      seekTime: seekTime,\n      updateSeekTime: function updateSeekTime(duration) {\n        setSeekTime(duration);\n      },\n      updateTime: function updateTime(duration) {\n        setTime(duration);\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AudioProvider, \"ucG9WXnXVuXQI9XqSGRjpHXqkDU=\");\n\n_c = AudioProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioProvider\");","map":{"version":3,"sources":["/Volumes/Gangster/codes/upwork/posdcastapp/src/AudioProvider.tsx"],"names":["React","useState","AudioContext","createContext","time","seekTime","updateSeekTime","duration","updateTime","AudioProvider","children","setTime","setSeekTime"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAYA,OAAO,IAAMC,YAAY,gBAAGF,KAAK,CAACG,aAAN,CAAsC;AAChEC,EAAAA,IAAI,EAAE,CAD0D;AAEhEC,EAAAA,QAAQ,EAAE,CAFsD;AAGhEC,EAAAA,cAAc,EAAE,wBAACC,QAAD,EAAsB,CAAE,CAHwB;AAIhEC,EAAAA,UAAU,EAAE,oBAACD,QAAD,EAAsB,CAAE;AAJ4B,CAAtC,CAArB;AAOP,OAAO,IAAME,aAA0C,GAAG,SAA7CA,aAA6C,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC1E,kBAAwBT,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaO,OAAb;;AACA,mBAAgCV,QAAQ,CAAC,CAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBO,WAAjB;;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,IAAI,EAAJA,IADK;AAELC,MAAAA,QAAQ,EAARA,QAFK;AAGLC,MAAAA,cAAc,EAAE,wBAACC,QAAD,EAAsB;AACpCK,QAAAA,WAAW,CAACL,QAAD,CAAX;AACD,OALI;AAMLC,MAAAA,UAAU,EAAE,oBAACD,QAAD,EAAsB;AAChCI,QAAAA,OAAO,CAACJ,QAAD,CAAP;AACD;AARI,KADT;AAAA,cAYGG;AAZH;AAAA;AAAA;AAAA;AAAA,WADF;AAgBD,CApBM;;GAAMD,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\n\ntype AudioContextType = {\n  time: number;\n  seekTime: number;\n  updateSeekTime: (point: number) => void;\n  updateTime: (point: number) => void;\n};\ntype AudioProviderType = {\n  children?: React.ReactNode;\n};\n\nexport const AudioContext = React.createContext<AudioContextType>({\n  time: 0,\n  seekTime: 0,\n  updateSeekTime: (duration: number) => {},\n  updateTime: (duration: number) => {},\n});\n\nexport const AudioProvider: React.FC<AudioProviderType> = ({ children }) => {\n  const [time, setTime] = useState(0);\n  const [seekTime, setSeekTime] = useState(0);\n\n  return (\n    <AudioContext.Provider\n      value={{\n        time,\n        seekTime,\n        updateSeekTime: (duration: number) => {\n          setSeekTime(duration);\n        },\n        updateTime: (duration: number) => {\n          setTime(duration);\n        },\n      }}\n    >\n      {children}\n    </AudioContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}